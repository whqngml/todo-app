import { useState, useRef, useEffect } from "react";
import axios from "axios";
import AddTodo from "./components/AddTodo";
import Todo from "./components/Todo";
import "../src/styles/common.scss";

const App = () => {
  const [todoItems, setTodoItems] = useState([]);
  const todoId = useRef(4);

  useEffect(() => {
    console.log("Ï≤´ Î†åÎçîÎßÅ ÏôÑÎ£å!");

    const getTodos = async () => {
      let result = await axios.get("http://localhost:8080/todos");
      console.log(result);
      setTodoItems(result.data);
    };
    getTodos();
  }, []);

  // AddTodo Ïª¥Ìè¨ÎÑåÌä∏Îäî ÏÉÅÏúÑ Ïª¥Ìè¨ÎÑåÌä∏(App)Ïùò todoItems(state)Ïóê Ï†ëÍ∑º Î∂àÍ∞ÄÎä•
  // ÏÉÅÏúÑ Ïª¥Ìè¨ÎÑåÌä∏(App)ÏùÄ AddTodo Ïª¥Ìè¨ÎÑåÌä∏ Ï†ëÍ∑º Í∞ÄÎä•
  // => App Ïª¥Ìè¨ÎÑåÌä∏Ïóê addItem() Ìï®ÏàòÎ•º Ï†ïÏùòÌïòÍ≥†, Ìï¥Îãπ Ìï®ÏàòÎ•º AddTodo propsÎ°ú ÎÑòÍ≤®Ïïº Ìï®
  const addItem = (newItem) => {
    const postTodo = async () => {
      let create = await axios.post("http://localhost:8080/todo", {
        title: newItem.title,
      });
      console.log("Ï∞ΩÏ°∞", create.data);
      return setTodoItems([...todoItems, create.data]); // setTodoItems(todoItems.concat(newItem))
    };
    // newItem - {id: xx, title: xx, done: false}
    // newItem.id = todoId.current++; // keyÎ•º ÏúÑÌïú id ÏÑ§Ï†ï
    // newItem.done = false; // done Ï¥àÍ∏∞Ìôî
    // Í∏∞Ï°¥ todoItemsÎ•º Ïú†ÏßÄÌïòÍ≥†, ÏÉàÎ°úÏö¥ newItemÏùÑ Ï∂îÍ∞Ä
    // return setTodoItems([...todoItems, newItem]); // setTodoItems(todoItems.concat(newItem))
    postTodo();
  };

  const deleteItem = (targetItem) => {
    const newTodoItems = todoItems.filter((item) => item.id !== targetItem.id);
    console.log(newTodoItems);
    setTodoItems(newTodoItems);
    // console.log("ÌÉÄÍ≤ü", targetItem);
    const deleteTodo = async () => {
      let destroy = await axios.delete(
        `http://localhost:8080/todo/${targetItem.id}`
      );
      console.log(destroy);
      console.log("ÏÇ≠Ï†ú", targetItem);
    };
    deleteTodo();
  };

  return (
    <div className="App">
      <header className="Header">Todo List</header>
      <AddTodo addItem={addItem} />
      <div className="left-todos">‚ù§Ô∏è {todoItems.length} Todos</div>
      {todoItems.length > 0 ? (
        todoItems.map((item) => {
          // console.log(item); // {id: 1, title: 'My Todo1', done: false}
          return <Todo key={item.id} item={item} deleteItem={deleteItem} />;
        })
      ) : (
        <p className="empty-todos">TodoÎ•º Ï∂îÍ∞ÄÌï¥Ï£ºÏÑ∏Ïöîüî•</p>
      )}
    </div>
  );
};

export default App;
